.. _file-formats:

***************************
Game representation formats
***************************

This section documents the file formats recognized by Gambit. These
file formats are text-based and designed to be readable and editable
by hand by humans to the extent possible, although programmatic tools
to generate and manipulate these files are almost certainly needed for
all but the most trivial of games.

These formats can be viewed as being low-level. They define games
explicitly in terms of their structure, and do not support any sort of
parameterization, macros, and the like. Thus, they are adapted largely
to the type of input required by the numerical methods for computing
Nash equilibria, which only apply to a particular realization of a
game's parameters. Higher-level tools, whether the graphical interface
or scripting applications, are indicated for doing parametric analysis
and the like.



Conventions common to all file formats
======================================

Several conventions are common to the interpretation of the file
formats listed below.

**Whitespace is not significant.** In general, whitespace (carriage
returns, horizontal and vertical tabs, and spaces) do not have an
effect on the meaning of the file. The only exception is inside
explicit double-quotes, where all characters are significant. The
formatting shown here is the same as generated by the Gambit code and
has been chosen for its readability; other formattings are possible
(and legal).

**Text labels.** Most objects in an extensive game may be given
textual labels. These are prominently used in the graphical interface,
for example, and it is encouraged for users to assign nonempty text
labels to objects if the game is going to be viewed in the graphical
interface. In all cases, these labels are surrounded by the quotation
character ("). The use of an explicit " character within a text label
can be accomplished by preceding the embedded " characters with a
backwards slash (\).
This is an alternate version of the first line of the example file, in
which the title of the game contains the term Bayesian game in
quotation marks::

    EFG 2 R "An example of a \"Bayesian game\"" { "Player 1" "Player 2" }




**Numerical data.** Numerical data, namely, the payoffs at outcomes,
and the action probabilities for chance nodes, may be expressed in
integer, decimal, or rational formats. In all cases, numbers are
understood by Gambit to be exact, and represented as such internally.
For example, the numerical entries 0.1 and 1/10 represent the same
quantity.


In versions 0.97 and prior, Gambit distinguished between floating
point and rational data. In these versions, the quantity 0.1 was
represented interally as a floating-point number. In this case, since
0.1 does not have an exact representation in binary floating point,
the values 0.1 and 1/10 were not identical, and some methods for
computing equilibria could give (slightly) different results for games
using one versus the other. In particular, using rational-precision
methods on games with the floating point numbers could give unexpected
output, since the conversion of 0.1 first to floating-point then to
rational would involve roundoff error. This is largely of technical
concern, and the current Gambit implementation now behaves in such a
way as to give the "expected" result when decimal numbers appear in
the file format.

.. toctree::
   :maxdepth: 2

   formats.efg
   formats.nfgpay
   formats.nfgout
   formats.agg
   formats.bagg







